{"version":3,"file":"static/webpack/static/development/pages/index.js.650e945b781b9a5d9785.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\r\nimport _ from 'lodash'\r\nimport styles from '../assets/scss/style.scss'\r\n\r\nconst _fieldWidth = 11;\r\nconst _fieldHeight = 21;\r\nconst _incatives = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 210, 310, 410, 510, 610, 710, 810, 910, 110, 200];\r\nconst _bottomInactive = [201, 202, 203, 204, 205, 206, 207, 208, 209, 2010];\r\n\r\nconst Block = ({ index, active, number, figure, incative }) => (\r\n    <div\r\n        className={\r\n            `block \r\n            block-${index} \r\n            ${active ? 'filled' : ''}\r\n            ${incative ? 'inactive' : ''}\r\n        `\r\n        }>{number}</div>\r\n)\r\n\r\nconst Line = ({ index, line }) => <div className={`line line-${index}`}>{line}</div>\r\n\r\nclass Index extends React.Component {\r\n\r\n    state = {\r\n        activeFigureIndex: 0,\r\n        bottomStructure: [],\r\n        active: [4, 5, 6],\r\n        currentFigure: 0,\r\n        allowedFigures : [\r\n            [\r\n                [4, 5, 6],\r\n                [5, 15, 25]\r\n            ],\r\n            [\r\n                [14, 15, 16, 25],\r\n                [5, 14, 15, 16],\r\n                [5, 25, 15, 16],\r\n                [5, 15, 25, 14]\r\n            ],\r\n            [\r\n                [4, 5, 6, 14, 16, 25, 24, 26, 15]\r\n            ]\r\n        ]\r\n    }\r\n\r\n    _moveLeft = () => {\r\n        const { allowedFigures,  activeFigureIndex, currentFigure} = this.state\r\n        let newAllowedFigures = allowedFigures\r\n        console.log(allowedFigures[currentFigure].map((item)=> {\r\n            \r\n        }))\r\n        allowedFigures[currentFigure][activeFigureIndex] = allowedFigures[currentFigure][activeFigureIndex].map((item) => item - 1)\r\n        if (_.intersection(newAllowedFigures[currentFigure][activeFigureIndex], _incatives).length > 0) {\r\n            return false;\r\n        }\r\n        this.setState({ allowedFigures: newAllowedFigures })\r\n    }\r\n\r\n\r\n    _moveDown = () => {\r\n        const { active } = this.state\r\n        const newActive = active.map((item) => item + 10)\r\n        if (_.intersection(newActive, _bottomInactive).length > 0) {\r\n            bottomStructure.push(active)\r\n            return false;\r\n        }\r\n        this.setState({ active: newActive })\r\n    }\r\n\r\n    _moveRight = () => {\r\n        const { active } = this.state\r\n        const newActive = active.map((item) => item + 1)\r\n        if (_.intersection(newActive, _incatives).length > 0) {\r\n            return false;\r\n        }\r\n        this.setState({ active: newActive })\r\n    }\r\n\r\n    _rotateFigure = () => {\r\n        const { currentFigure, activeFigureIndex, allowedFigures } = this.state\r\n        const maxIndex = allowedFigures[currentFigure].length - 1\r\n        const newIndex = activeFigureIndex + 1 <= maxIndex ? activeFigureIndex + 1 : 0\r\n        this.setState({ activeFigureIndex: newIndex, active:  allowedFigures[currentFigure][newIndex]})\r\n    }\r\n\r\n    _changeFigure = () => {\r\n        const {allowedFigures } = this.state\r\n        this.setState({ currentFigure: Math.floor(Math.random() * allowedFigures.length), activeFigureIndex: 0 })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            bottomStructure,\r\n            allowedFigures,\r\n            activeFigureIndex,\r\n            currentFigure\r\n        } = this.state\r\n        let field = []\r\n        for (let i = 0; i < _fieldHeight; i++) {\r\n            let line = []\r\n            for (let j = 0; j < _fieldWidth; j++) {\r\n                const number = Number(String(i) + j);\r\n                const incative = _incatives.includes(number)\r\n                line.push(<Block\r\n                    key={j}\r\n                    incative={incative}\r\n                    index={j}\r\n                    active={allowedFigures[currentFigure][activeFigureIndex].includes(number) || _.flatten(bottomStructure).includes(number)}\r\n                    number={number} ></Block>)\r\n            }\r\n            field.push(<Line key={i} line={line} index={i}></Line>)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <button onClick={(e) => this._moveDown()}>Down</button>\r\n                    <button onClick={(e) => this._moveLeft()}>Left</button>\r\n                    <button onClick={(e) => this._moveRight()}>Right</button>\r\n                    <button onClick={(e) => this._rotateFigure()}>Rotate</button>\r\n                    <button onClick={(e) => this._changeFigure()}>Change</button>\r\n                </div>\r\n                <div className={styles.field}>\r\n                    {field}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA1GA;AACA;AA4GA;;;;A","sourceRoot":""}